/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package Exchange.Matching.server;
import Exchange.Matching.server.*;

import java.io.DataInputStream;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.net.ServerSocket;
import java.net.Socket;
import javax.xml.parsers.*;

public class Server {
    private ServerSocket socket;
    //private Proxy proxy;
    //private Checker checker;
    private static int task_id;


    public Server() throws IOException{
        socket=new ServerSocket(12345);
        task_id=0;
    }

    public void listen() throws Exception{
        Socket socket=this.socket.accept();
        task_id++;
        new Thread(new Task(socket,task_id)).start();
    }

    class Task implements Runnable{
        private Socket socket;
        private DataInputStream Trans;
        private FileOutputStream fileout;
        private int task_id;
        public Task(Socket socket,int task_id){
            this.socket=socket;
            this.task_id=task_id;

        }

        @Override
        public void run(){
            try{
                Trans=new DataInputStream(socket.getInputStream());
                long fileLen=Trans.readLong();
                
                File file=new File(Integer.toString(task_id));
                fileout=new FileOutputStream(file);
                byte[] bytes=new byte[1024];
                for(;;){
                    int n=Trans.read(bytes,0,bytes.length);
                    if(n==-1){
                        break;
                    }
                    fileout.write(bytes,0,n);
                    System.out.print(bytes);
                    fileout.flush();
                }
                System.out.println("Received file"+Integer.toString(Server.task_id)+Long.toString(fileLen));

            }catch(Exception e){
                e.printStackTrace();
            }finally{
                try{
                    if(fileout!=null){
                        fileout.close();
                    }
                    if (Trans!=null){
                        Trans.close();
                    }
                    socket.close();
                }catch(Exception e){}
            }
        }
    }

    public static void main(String[] args) {
        try{
            Server server=new Server();
            server.listen();
        }catch(Exception e){
            e.printStackTrace();
        }
    }
}
